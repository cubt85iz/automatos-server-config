variant: fcos
version: 1.5.0

passwd:
  users:
  {% for user in users %}
    - name: {{ user.name }}
      password_hash: {{ user.password }}
      {% if user.groups is defined %}
      groups:
      {% for group in user.groups %}
        - {{ group }}
      {% endfor %}
      {% endif %}
      {% if user.pubkeys is defined %}
      ssh_authorized_keys:
      {% for key in user.pubkeys %}
        - {{ key }}
      {% endfor %}
      {% endif %}
      {% if user.id is defined %}
      uid: {{ user.id }}
      {% endif %}
  {% endfor %}

{% if root_disks is defined %}
boot_device:
  mirror:
    devices:
      {% for disk in root_disks %}
      - {{ disk }}
      {% endfor %}
{% endif %}

storage:
  directories:
    {% for directory in directories %}
    - path: {{ directory }}
      mode: 0755
      user:
        name: root
      group:
        name: root
        
    {% endfor %}
    {% for mount in mounts %}
    - path: {{ mount.path }}
      mode: 0755
      user:
        name: root
      group:
        name: root

    {% for volume in mount.volumes %}
    - path: {{ mount.path }}/{{ volume }}
      mode: 0755
      user:
        name: root
      group:
        name: root

    {% endfor %}
    {% endfor %}
  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: {{ hostname }}.{{ domain }}

    - path: /etc/modules-load.d/zfs.conf
      mode: 0644
      contents:
        inline: zfs

    - path: /etc/samba/smb.conf
      overwrite: true
      mode: 0644
      contents:
        local: smb.conf

    - path: /root/.config/rclone/rclone.conf
      overwrite: true
      mode: 0644
      contents:
        local: rclone.conf

    {% for key in keys %}
    - path: {{ key.path }}
      overwrite: true
      user:
        name: {{ key.user }}
      group:
        name: {{ key.group }}
      mode: {{ key.mode }}
      contents:
        inline:
          {% filter indent(width=10) %}
          {{ key.content }}
          {% endfilter %}
    {% endfor %}

  links:
    - path: /etc/localtime
      target: ../usr/share/zoneinfo/America/New_York

    {% for link in links %}
    - path: {{ link.path }}
      target: {{ link.target }}

    {% endfor %}
  trees:
    - local: etc/
      path: /etc

systemd:
  units:
    - name: healthcheck-updates.timer
      enabled: true

    - name: healthcheck-zfs.timer
      enabled: true

    {% set daily_targets = [] %}
    {% for container in containers if container.keep_daily is defined %}
    {% set result = daily_targets.append(container) %}
    {% endfor %}
    {% if daily_targets | length > 0 %}
    - name: backup-daily.target
      enabled: true

    {% endif %}
    {% set monthly_targets = [] %}
    {% for container in containers if container.keep_monthly is defined %}
    {% set result = monthly_targets.append(container) %}
    {% endfor %}
    {% if monthly_targets | length > 0 %}
    - name: backup-monthly.target
      enabled: true

    {% endif %}
    {% set weekly_targets = [] %}
    {% for container in containers if container.keep_weekly is defined %}
    {% set result = weekly_targets.append(container) %}
    {% endfor %}
    {% if weekly_targets | length > 0 %}
    - name: backup-weekly.target
      enabled: true

    {% endif %}
    {% set yearly_targets = [] %}
    {% for container in containers if container.keep_yearly is defined %}
    {% set result = yearly_targets.append(container) %}
    {% endfor %}
    {% if yearly_targets | length > 0 %}
    - name: backup-yearly.target
      enabled: true

    {% endif %}
    {% set healthcheck_targets = [] %}
    {% for container in containers if container.backup_path is defined %}
    {% set result = healthcheck_targets.append(container) %}
    {% endfor %}
    {% if healthcheck_targets | length > 0 %}
    - name: healthcheck-container.target
      enabled: true

    {% endif %}
    {% if mounts is defined and mounts | length > 0 %}
    {% for mount in mounts %}
    - name: {{ mount.path[1:] | replace("-", "\\x2d") | replace("/", "-") }}.mount
      enabled: true

    {% endfor %}
    {% endif %}